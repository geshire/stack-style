@import (reference) "../_base/helpers";

/*.....................................
  buttons
.....................................*/

// button base
.btn() {
  // display
  display: inline-block;
  padding: 0px 15px;
  .box-sizing(border-box);

  // typography
  font-family: @font-1;
  font-size: 16px;
  font-weight: 800;
  // letter-spacing: .5px;
  text-align: center;
  line-height: 38px;
  height: 40px;

  background-color: transparent;
  border-color: transparent;

  .transition(background-color 200ms ease-in-out, border 200ms ease-in-out);

  // states
  &:link,
  &:visited {
    text-decoration: none;
    background-color: transparent;
    border-color: transparent;
  }
  &:hover,
  &.is-hover {
    opacity: 1;
    cursor: pointer;
    text-decoration: none;
    background-color: transparent;
    border-color: transparent;
  }
  &:focus,
  &.is-focus {
    background-color: transparent;
    border-color: transparent;
  }
  &:active,
  &.is-active {
    background-color: transparent;
    border-color: transparent;
  }
  &[disabled],
  &.is-disabled {
    &:hover, &:focus, &:active, &.is-active {
    }
  }
  &.loading,
  &.processing {
    position: relative;
    color: rgba(0, 0, 0, 0);
    &:before {
      content: " ";
      display: block;
      position: absolute;
      left: 50%;
      top: 50%;
      margin: -8px 0 0 -8px;
    }
  }
  &.btn--borderless {
    border-width: 0px !important;
  }
}

.btn-colors(...) {
  .border-radius(slice(@arguments, 10, 11));
  border: slice(@arguments, 11, 12) solid transparent;
  color: slice(@arguments, 1, 2);
  background-color: slice(@arguments, 4, 5);
  border-color: slice(@arguments, 7, 8);
  font-family: slice(@arguments, 12, 13);
  font-weight: slice(@arguments, 13, 14);
  box-shadow: e(slice(@arguments, 14, 15));

  &:link,
  &:visited {
    background-color: slice(@arguments, 4, 5);
    border-color: slice(@arguments, 7, 8);
    color: slice(@arguments, 1, 2);
  }
  &:hover,
  &.hover,
  &:focus,
  &.focus {
    color: slice(@arguments, 2, 3);
    background-color: slice(@arguments, 5, 6);
    border-color: slice(@arguments, 8, 9);
  }
  &:active,
  &.active {
    color: slice(@arguments, 3, 4);
    background-color: slice(@arguments, 6, 7);
    border-color: slice(@arguments, 9, 10);
  }
  &.selected {
    color: slice(@arguments, 15, 16);
    background-color: slice(@arguments, 16, 17);
    border-color: slice(@arguments, 17, 18);
  }
  &.processing {
    color: transparent;
    &:after {
      content: ' ';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-repeat: no-repeat;
      background-size: 20%;
      background-position: 50% 50%;
      .animation(spin 600ms infinite linear);
    }
  }
}

.btn-circle {
  border-color: transparent !important;
  .border-radius(50%);
}

.for-each(@pair in @buttons) {
  @key: at(@pair, 1);
  @args: at(@buttons, @key);
  .btn-@{key} {
    .btn();
    .btn-colors(at(@buttons, @key));
  }
}

// btn sizes
.btn--small {
  padding: 0 10px;
  font-size: 14px;
  height: 35px;
  line-height: 32px;
}
.btn--medium {
  padding: 0 15px;
  font-size: 16px;
  height: 40px;
  line-height: 37px;
}
.btn--large {
  padding: 0 25px;
  font-size: 18px;
  height: 50px;
  line-height: 45px;
}


/* buttons group
......................................*/
.btn-group {
  &.btn-group--center,
  &.btn-group--left,
  &.btn-group--right {
    .for-each(@pair in @buttons) {
      @key: at(@pair, 1);
      @args: at(@buttons, @key);
      .btn-@{key} {
        display: inline-block;
        float: none;
      }
    }
  }

  &.btn-group--center {
    text-align: center;
  }
  &.btn-group--left {
    text-align: left;
  }
  &.btn-group--right {
    text-align: right;
  }

  &:after {
    content: ' ';
    clear: both;
    height: 0;
    font-size: 0;
    visibility: hidden;
    display: block;
  }

  .for-each(@pair in @buttons) {
    @key: at(@pair, 1);
    @args: at(@buttons, @key);
    .btn-@{key} {
      display: block;
      float: left;
      border-radius: 0;
      &.is-selected {
        box-shadow: inset 0px 0px 7px 0px rgba(170,170,170,0.4);
      }
    }
    .btn-@{key}:nth-child(odd) {
      border-right: 1px solid slice(@args, 7, 8);
      border-left: 1px solid slice(@args, 7, 8);
      &:hover,
      &:focus {
        border-right: 1px solid slice(@args, 7, 8);
        border-left: 1px solid slice(@args, 7, 8);
        z-index: 10000;
      }
    }
    .btn-@{key}:nth-child(even) {
      border-left: 1px solid transparent;
      border-right: 1px solid transparent;
      &:hover,
      &:focus {
        border-left: 1px solid slice(@args, 7, 8);
        border-right: 1px solid slice(@args, 7, 8);
        z-index: 10000;
      }
    }
    .btn-@{key}:first-child {
      border-left: 1px solid slice(@args, 7, 8);
      border-radius: 5px 0 0 5px;
    }
    .btn-@{key}:last-child {
      border-right: 1px solid slice(@args, 7, 8);
      border-radius: 0 5px 5px 0;
    }
  }
}
